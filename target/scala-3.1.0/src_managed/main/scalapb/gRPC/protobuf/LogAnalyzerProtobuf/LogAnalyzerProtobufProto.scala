// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package gRPC.protobuf.LogAnalyzerProtobuf

object LogAnalyzerProtobufProto extends _root_.scalapb.GeneratedFileObject {
  lazy val dependencies: Seq[_root_.scalapb.GeneratedFileObject] = Seq.empty
  lazy val messagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] =
    Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]](
      gRPC.protobuf.LogAnalyzerProtobuf.AnalyzeLogRequest,
      gRPC.protobuf.LogAnalyzerProtobuf.AnalyzeLogResponse
    )
  private lazy val ProtoBytes: _root_.scala.Array[Byte] =
      scalapb.Encoding.fromBase64(scala.collection.immutable.Seq(
  """ChlMb2dBbmFseXplclByb3RvYnVmLnByb3RvEg1nUlBDLnByb3RvYnVmIp0BChFBbmFseXplTG9nUmVxdWVzdBIsCglpbnB1d
  ERhdGUYASABKAlCDuI/CxIJaW5wdXREYXRlUglpbnB1dERhdGUSLAoJaW5wdXRUaW1lGAIgASgJQg7iPwsSCWlucHV0VGltZVIJa
  W5wdXRUaW1lEiwKCWRlbHRhVGltZRgDIAEoCUIO4j8LEglkZWx0YVRpbWVSCWRlbHRhVGltZSI5ChJBbmFseXplTG9nUmVzcG9uc
  2USIwoGcmVzdWx0GAEgASgJQgviPwgSBnJlc3VsdFIGcmVzdWx0Ml8KC0xvZ0FuYWx5emVyElAKB0FuYWx5emUSIC5nUlBDLnByb
  3RvYnVmLkFuYWx5emVMb2dSZXF1ZXN0GiEuZ1JQQy5wcm90b2J1Zi5BbmFseXplTG9nUmVzcG9uc2UiAGIGcHJvdG8z"""
      ).mkString)
  lazy val scalaDescriptor: _root_.scalapb.descriptors.FileDescriptor = {
    val scalaProto = com.google.protobuf.descriptor.FileDescriptorProto.parseFrom(ProtoBytes)
    _root_.scalapb.descriptors.FileDescriptor.buildFrom(scalaProto, dependencies.map(_.scalaDescriptor))
  }
  lazy val javaDescriptor: com.google.protobuf.Descriptors.FileDescriptor = {
    val javaProto = com.google.protobuf.DescriptorProtos.FileDescriptorProto.parseFrom(ProtoBytes)
    com.google.protobuf.Descriptors.FileDescriptor.buildFrom(javaProto, _root_.scala.Array(
    ))
  }
  @deprecated("Use javaDescriptor instead. In a future version this will refer to scalaDescriptor.", "ScalaPB 0.5.47")
  def descriptor: com.google.protobuf.Descriptors.FileDescriptor = javaDescriptor
}